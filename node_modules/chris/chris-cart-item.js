

   

   
import { PolymerElement, html } from 'https://dashboard.dazzle.website/node_modules/@polymer/polymer/polymer-element.js';
import {Dazzle} from 'https://dashboard.dazzle.website/node_modules/@dazzle/dz-dazzle/dz-library.js';

class greenPageLoader extends PolymerElement {
    static get is(){
        return 'chris-cart-item';
    }
    // static get properties() {
    //       return {

    //       }
    //     }

    constructor(){
        super();
        this.productManager = new DataPackage('product');

    }
    connectedCallback() {
      super.connectedCallback();
      this.itemId = this.getAttribute('item-id') || null;
      this.qty = this.getAttribute('qty') || 1;
      this.template = document.querySelector('template#chris-cart-item').innerHTML;
        // this.template = this.innerHTML;
        this.productManager.getDataByES(this.itemId).then(res=>{
            res['qty'] = this.qty;
            this.price = res['price'];
            this.title = res['title'];
            res['subTotal'] = parseInt(this.qty) * res['price'];
            this.setAttribute('subtotal',res['subTotal']);
            this.innerHTML = this.productManager.replaceToken(res,this.template); 
            this._listener();
            this.querySelector('[dz-qty]').addEventListener('change',e=>{
               this._reCalc(); 
            });
            Dazzle.dzFire('re-calc',{});
        });    
    }
    getTitle(){
        return this.title;
    }
    getQty(){
        return this.qty;
    }
    digestForm(){
        let inputs=document.querySelectorAll('input, select');
        let json = {};
        inputs.forEach(item=>{
           let field = item.getAttribute('name') || null;
           json[field] = item.value;
           console.log('Digest item',item,item.value);

        });
        console.log('Digest',json);
        return json;
    }
    _remove(e){
        function arrayRemove(arr, value) { 
            return arr.filter(function(ele){ 
                return ele != value; 
            });
        }
        let cart = store.get('cart') || [];
        
        cart = arrayRemove(cart,this.itemId);
        console.log('Cart',cart,this.itemId);
        store.set('cart',cart);
        this.remove();
        Dazzle.dzFire('re-calc',{});
    }
    _listener(){
        console.log("user component loaded");
        let buttons = document.querySelectorAll('[dz-func]');
        buttons.forEach(item=>{
            let fc = item.getAttribute('dz-func') || null;
            item.addEventListener('click',e=>{
                switch(fc){
                    case '_remove':
                        this._remove(e);
                    break;
                    

                    

                // ....    
                }
  
            });            
        });
        
    }
    _reCalc(){
        this.qty = this.querySelector('[dz-qty]').value;
        this.setAttribute('qty',this.qty);
        this.setAttribute('subtotal',this.price*this.qty);
        this.querySelector('[dz-subtotal]').innerHTML = this.price * this.qty;
         Dazzle.dzFire('re-calc',{});
    }
    ready(){
        super.ready();


     }
    _select(e) {
        let target = e.currentTarget;
        let id = target.getAttribute('item-id') || null;
        store.set('my-product',id);
        location.href="/productpage.html";
    }

    static get template () {
        return html`
            <slot></slot>
        `;
      }
}
customElements.define(greenPageLoader.is, greenPageLoader);
   